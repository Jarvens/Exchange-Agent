// Code generated by protoc-gen-go. DO NOT EDIT.
// source: quote_java.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RpcResponse1 struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Channel              string   `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcResponse1) Reset()         { *m = RpcResponse1{} }
func (m *RpcResponse1) String() string { return proto.CompactTextString(m) }
func (*RpcResponse1) ProtoMessage()    {}
func (*RpcResponse1) Descriptor() ([]byte, []int) {
	return fileDescriptor_quote_java_24e76ff4b6235d36, []int{0}
}
func (m *RpcResponse1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcResponse1.Unmarshal(m, b)
}
func (m *RpcResponse1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcResponse1.Marshal(b, m, deterministic)
}
func (dst *RpcResponse1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcResponse1.Merge(dst, src)
}
func (m *RpcResponse1) XXX_Size() int {
	return xxx_messageInfo_RpcResponse1.Size(m)
}
func (m *RpcResponse1) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcResponse1.DiscardUnknown(m)
}

var xxx_messageInfo_RpcResponse1 proto.InternalMessageInfo

func (m *RpcResponse1) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RpcResponse1) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RpcResponse1) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *RpcResponse1) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

// event: subscribe
// channel: quote.kline.1m.btc_usdt
type RpcRequest1 struct {
	Event                string   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Channel              string   `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcRequest1) Reset()         { *m = RpcRequest1{} }
func (m *RpcRequest1) String() string { return proto.CompactTextString(m) }
func (*RpcRequest1) ProtoMessage()    {}
func (*RpcRequest1) Descriptor() ([]byte, []int) {
	return fileDescriptor_quote_java_24e76ff4b6235d36, []int{1}
}
func (m *RpcRequest1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcRequest1.Unmarshal(m, b)
}
func (m *RpcRequest1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcRequest1.Marshal(b, m, deterministic)
}
func (dst *RpcRequest1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcRequest1.Merge(dst, src)
}
func (m *RpcRequest1) XXX_Size() int {
	return xxx_messageInfo_RpcRequest1.Size(m)
}
func (m *RpcRequest1) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcRequest1.DiscardUnknown(m)
}

var xxx_messageInfo_RpcRequest1 proto.InternalMessageInfo

func (m *RpcRequest1) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *RpcRequest1) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func init() {
	proto.RegisterType((*RpcResponse1)(nil), "pb.RpcResponse1")
	proto.RegisterType((*RpcRequest1)(nil), "pb.RpcRequest1")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RpcBidStream1Client is the client API for RpcBidStream1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RpcBidStream1Client interface {
	QuoteBidStream(ctx context.Context, opts ...grpc.CallOption) (RpcBidStream1_QuoteBidStreamClient, error)
}

type rpcBidStream1Client struct {
	cc *grpc.ClientConn
}

func NewRpcBidStream1Client(cc *grpc.ClientConn) RpcBidStream1Client {
	return &rpcBidStream1Client{cc}
}

func (c *rpcBidStream1Client) QuoteBidStream(ctx context.Context, opts ...grpc.CallOption) (RpcBidStream1_QuoteBidStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RpcBidStream1_serviceDesc.Streams[0], "/pb.RpcBidStream1/QuoteBidStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &rpcBidStream1QuoteBidStreamClient{stream}
	return x, nil
}

type RpcBidStream1_QuoteBidStreamClient interface {
	Send(*RpcRequest1) error
	Recv() (*RpcResponse1, error)
	grpc.ClientStream
}

type rpcBidStream1QuoteBidStreamClient struct {
	grpc.ClientStream
}

func (x *rpcBidStream1QuoteBidStreamClient) Send(m *RpcRequest1) error {
	return x.ClientStream.SendMsg(m)
}

func (x *rpcBidStream1QuoteBidStreamClient) Recv() (*RpcResponse1, error) {
	m := new(RpcResponse1)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RpcBidStream1Server is the server API for RpcBidStream1 service.
type RpcBidStream1Server interface {
	QuoteBidStream(RpcBidStream1_QuoteBidStreamServer) error
}

func RegisterRpcBidStream1Server(s *grpc.Server, srv RpcBidStream1Server) {
	s.RegisterService(&_RpcBidStream1_serviceDesc, srv)
}

func _RpcBidStream1_QuoteBidStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RpcBidStream1Server).QuoteBidStream(&rpcBidStream1QuoteBidStreamServer{stream})
}

type RpcBidStream1_QuoteBidStreamServer interface {
	Send(*RpcResponse1) error
	Recv() (*RpcRequest1, error)
	grpc.ServerStream
}

type rpcBidStream1QuoteBidStreamServer struct {
	grpc.ServerStream
}

func (x *rpcBidStream1QuoteBidStreamServer) Send(m *RpcResponse1) error {
	return x.ServerStream.SendMsg(m)
}

func (x *rpcBidStream1QuoteBidStreamServer) Recv() (*RpcRequest1, error) {
	m := new(RpcRequest1)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RpcBidStream1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.RpcBidStream1",
	HandlerType: (*RpcBidStream1Server)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "QuoteBidStream",
			Handler:       _RpcBidStream1_QuoteBidStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "quote_java.proto",
}

func init() { proto.RegisterFile("quote_java.proto", fileDescriptor_quote_java_24e76ff4b6235d36) }

var fileDescriptor_quote_java_24e76ff4b6235d36 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xbd, 0x4e, 0xc3, 0x40,
	0x10, 0x84, 0x39, 0x27, 0x01, 0x79, 0xf9, 0x8b, 0x56, 0x14, 0x27, 0x44, 0x61, 0xb9, 0xba, 0xca,
	0xc2, 0x50, 0x51, 0xd0, 0x50, 0xd2, 0x71, 0x3c, 0x00, 0x3a, 0x5f, 0x56, 0x10, 0xc4, 0xfd, 0x24,
	0xb7, 0xc9, 0xf3, 0xa3, 0x9c, 0x8d, 0x71, 0xba, 0x9d, 0x19, 0x69, 0x3e, 0xcd, 0xc2, 0x72, 0xb3,
	0x0b, 0x4c, 0x1f, 0xdf, 0x66, 0x6f, 0x9a, 0xb8, 0x0d, 0x1c, 0xb0, 0x88, 0x5d, 0xcd, 0x70, 0xa1,
	0xa3, 0xd5, 0x94, 0x62, 0xf0, 0x89, 0x5a, 0x44, 0x98, 0xdb, 0xb0, 0x22, 0x29, 0x2a, 0xa1, 0x16,
	0x3a, 0xdf, 0x28, 0xe1, 0xcc, 0x51, 0x4a, 0xe6, 0x93, 0x64, 0x51, 0x09, 0x55, 0xea, 0x3f, 0x79,
	0x48, 0xec, 0x97, 0xf1, 0x9e, 0x7e, 0xe4, 0xac, 0x4f, 0x06, 0x89, 0x77, 0x50, 0xf2, 0xda, 0x51,
	0x62, 0xe3, 0xa2, 0x9c, 0x57, 0x42, 0xcd, 0xf4, 0xbf, 0x51, 0x3f, 0xc3, 0x79, 0xa6, 0x6e, 0x76,
	0x94, 0xb8, 0xc5, 0x1b, 0x58, 0xd0, 0x9e, 0x3c, 0x67, 0x6a, 0xa9, 0x7b, 0x31, 0x2d, 0x2f, 0x8e,
	0xca, 0x1f, 0x5e, 0xe1, 0x52, 0x47, 0xfb, 0xb2, 0x5e, 0xbd, 0xf3, 0x96, 0x8c, 0x6b, 0xf1, 0x09,
	0xae, 0xde, 0x0e, 0xeb, 0x46, 0x0b, 0xaf, 0x9b, 0xd8, 0x35, 0x13, 0xc6, 0xed, 0x72, 0x34, 0x86,
	0xa9, 0xf5, 0x89, 0x12, 0xf7, 0xa2, 0x3b, 0xcd, 0xbf, 0x78, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0x95, 0x80, 0x20, 0xc7, 0x1f, 0x01, 0x00, 0x00,
}
